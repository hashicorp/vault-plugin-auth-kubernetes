---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault
  namespace: test
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-server-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: vault
  namespace: test
---
apiVersion: v1
kind: Service
metadata:
  name: vault
  namespace: test
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
spec:
  ports:
    - name: http
      port: 8200
      targetPort: 8200
  selector:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
    component: server
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  namespace: test
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
spec:
  serviceName: vault
  replicas: 1
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app.kubernetes.io/name: vault
      app.kubernetes.io/instance: vault
      component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vault
        app.kubernetes.io/instance: vault
        component: server
    spec:
      terminationGracePeriodSeconds: 0
      serviceAccountName: vault
      securityContext:
        runAsNonRoot: true
        runAsGroup: 1000
        runAsUser: 100
        fsGroup: 1000
      volumes:
        - name: home
          emptyDir: {}
      containers:
        - name: vault
          image: hashicorp/vault:dev
          imagePullPolicy: Never
          command:
          - "/bin/sh"
          - "-ec"
          args: 
          - /usr/local/bin/docker-entrypoint.sh vault server -dev -dev-plugin-dir=/vault/plugin_directory
          securityContext:
            allowPrivilegeEscalation: false
          env:
            - name: VAULT_ADDR
              value: "http://127.0.0.1:8200"
            - name: SKIP_CHOWN
              value: "true"
            - name: SKIP_SETCAP
              value: "true"
            - name: HOME
              value: "/home/vault"
            - name: VAULT_DEV_ROOT_TOKEN_ID
              value: root
            - name: VAULT_DEV_LISTEN_ADDRESS
              value: "[::]:8200"
          volumeMounts:
            - name: home
              mountPath: /home/vault
          ports:
            - containerPort: 8200
              # This exposes the container port on the node, which allows kind to forward
              # from the host machine to this container inside the cluster.
              hostPort: 8200
              name: http
          readinessProbe:
            exec:
              command: ["/bin/sh", "-ec", "vault status"]
            failureThreshold: 2
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 3
